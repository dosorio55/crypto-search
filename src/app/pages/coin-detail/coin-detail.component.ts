import { Component, OnInit } from '@angular/core';
import { ActivatedRoute } from '@angular/router';
import { ICoins } from '../../core/services/models/product.models';
import { CoinsService } from 'src/app/core/services/coins/coins.service';
import { Observable } from 'rxjs';
import { Chart, registerables } from 'chart.js';
Chart.register(...registerables);

@Component({
  selector: 'app-coin-detail',
  templateUrl: './coin-detail.component.html',
  styleUrls: ['./coin-detail.component.scss']
})
export class CoinDetailComponent implements OnInit {

  public currentCoin$?: Observable<ICoins[]>;
  public searchValue: string = ""
  // private coinDates: number[] = [];
  // private coinPrices: number[] = [];

  constructor(private activatedRoute: ActivatedRoute,
    private coinService: CoinsService) { }

  ngOnInit(): void {
    //let dates: number[] = [];
    //let prices: number[] = [];
    // let i = 0;
    
    let dateAux: number[] = [];
    let pricesAux: number[] = [];
    
    
    this.coinService.getMarketRange('bitcoin').subscribe((coinMarketRange) => {
      for (let index = 0; index < 200 ; index++) {

        const datePrices = coinMarketRange.prices[index][0];
        const pricesP = coinMarketRange.prices[index][1];

        
        
        
        dateAux.push(datePrices)
        pricesAux.push(pricesP)
        
      }
      const myChart = new Chart("myChart", {
        type: 'bar',
        data: {
          datasets: [{
            data: dateAux,
          }],
          labels: pricesAux
      },
        options: {
          scales: {
            y: {
              beginAtZero: false
            }
          }
        }
      });
    });
    
    
   /*  let dates = [1653246239258, 1653246593824, 1653246863261, 1653247114651, 1653247518024, 1653247758488, 1653248122876, 1653248392153, 1653248672093, 1653248964878, 1653249209116, 1653249575838, 1653249887215, 1653250169341, 1653250456898, 1653250714177, 1653251121427, 1653251261769, 1653251674824, 1653251947929, 1653252310815, 1653252550733, 1653252913390, 1653253146483, 1653253421521, 1653253805234, 1653254071035, 1653254398149, 1653254670987, 1653255049429, 1653255316210, 1653255577681, 1653255850742, 1653256211238, 1653256473484, 1653256737600, 1653256998967, 1653257377095, 1653257670849, 1653257933073, 1653258307801, 1653258567249, 1653258829387, 1653259182709, 1653259438386, 1653259799248, 1653260075938, 1653260330395, 1653260709716, 1653260987509, 1653261272409, 1653261534822, 1653261924416, 1653262189253, 1653262455913, 1653262726877, 1653263109248, 1653263362220, 1653263622773, 1653263973481, 1653264266621, 1653264507327, 1653264798712, 1653265203607, 1653265489406, 1653265752131, 1653266064387, 1653266439426, 1653266699029, 1653266978046, 1653267276254, 1653267519626, 1653267915296, 1653268198972, 1653268469699, 1653268745659, 1653269110454, 1653269432257, 1653269685779, 1653270018198, 1653270362739, 1653270598019, 1653270935836, 1653271180578, 1653271450768, 1653271857778, 1653272106167, 1653272380283, 1653272797024, 1653273049010, 1653273344321, 1653273603618, 1653273911735, 1653274318693, 1653274593235, 1653274910375, 1653275192132, 1653275495210, 1653275773157, 1653276067545];
    let prices = [30058.514390646902, 30056.56633634051, 30035.823812347993, 30043.060454872135, 30056.62367280671, 30046.083320503505, 30033.399189674226, 30030.24718589713, 30043.177644458887, 30024.232912761276, 29993.69152824562, 29976.10252024696, 29977.610696367425, 29955.265575377583, 29979.107102570288, 29996.36499643421, 30009.848763555117, 30025.92139664368, 30076.22637605446, 30063.723280061036, 30045.85089817729, 30048.84779380521, 30028.505129816374, 29974.13309415041, 29963.02819631582, 29962.62961740394, 29983.748556497114, 29990.582100234507, 30016.239072788012, 30009.234473369397, 30029.785374292635, 30049.942166614146, 30038.34071383075, 30078.920304662523, 30071.67360307364, 30069.910565295708, 30119.556777631344, 30167.99044478114, 30167.63346761232, 30193.23963618515, 30315.66597986464, 30275.412607942595, 30321.717939207996, 30330.81108125665, 30333.07271785835, 30319.85844782602, 30359.303533026075, 30341.531208439646, 30366.294256691897, 30399.653688306757, 30414.61640790098, 30415.35592556441, 30421.92326679254, 30451.59189931019, 30399.977973251993, 30373.520783919044, 30392.863489370102, 30384.079172118923, 30387.098858023448, 30351.050417138096, 30297.457558243867, 30327.22623491587, 30391.450218845814, 30374.744857078847, 30357.657117277835, 30311.320213781117, 30300.736281399706, 30300.38480890905, 30298.665900286258, 30291.395079237387, 30296.1166822327, 30300.123520864105, 30262.63701099878, 30230.068283437573, 30253.54104409233, 30242.55002919345, 30231.340070263086, 30247.096468706844, 30257.553187334885, 30259.571169896608, 30231.25633576779, 30234.11900711185, 30226.804087558994, 30233.304059660284, 30238.52753297782, 30195.168828138747, 30156.64220976139, 30155.719172319634, 30165.062304351908, 30150.669582971706, 30130.5597385977, 30098.252728553773, 30103.01131662196, 30105.809782822267, 30144.877721449393, 30147.724679826282, 30162.200777993916, 30179.489327066756, 30187.129536628177, 30189.01160594487]
    console.log(dates)
    console.log(prices) */
    // console.log(typeof prices)



    this.activatedRoute.params.subscribe((params) => {
      const CoinId = params['id'];
      this.currentCoin$ = this.coinService.getCoinById(CoinId);
    })
  }
}
